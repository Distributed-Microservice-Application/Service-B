spring.application.name=Service-B

# Server port
server.port=8082

# Kafka Properties - Environment-aware configuration
# For Docker: kafka:29092, For Local Development: localhost:9092
spring.kafka.consumer.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.consumer.group-id=service-b-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

# Enhanced Kafka Consumer Properties
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval=1000
spring.kafka.consumer.session-timeout=30000
spring.kafka.consumer.heartbeat-interval=3000
spring.kafka.consumer.max-poll-records=500
spring.kafka.consumer.max-poll-interval=300000
# JSON Deserializer Properties - Enhanced for better compatibility
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.use.type.headers=false
spring.kafka.consumer.properties.spring.json.value.default.type=com.DMA.Service_B.model.KafkaMessage
spring.kafka.consumer.properties.spring.json.add.type.headers=false
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer

# Message Header Processing - Enable header processing for compatibility with Service-A
spring.kafka.consumer.properties.spring.json.remove.type.headers=false
spring.kafka.consumer.properties.spring.json.type.function=*

# Jackson configuration for date handling
spring.jackson.deserialization.adjust-dates-to-context-time-zone=false
spring.jackson.deserialization.fail-on-unknown-properties=false
spring.jackson.date-format=yyyy-MM-dd'T'HH:mm:ss.SSSSSSSZ
spring.jackson.time-zone=UTC
spring.kafka.consumer.properties.spring.json.type.mapping=java.time.ZonedDateTime:java.time.ZonedDateTime

# Kafka Topic - Updated to match Service-A
kafka.topic.summation=user-events

# Partition Configuration - Handle multiple partitions from Service-A instances
spring.kafka.consumer.properties.partition.assignment.strategy=org.apache.kafka.clients.consumer.RoundRobinAssignor

# Error Handling Configuration
spring.kafka.consumer.properties.retry.backoff.ms=1000
spring.kafka.consumer.properties.reconnect.backoff.ms=1000
spring.kafka.consumer.properties.request.timeout.ms=30000

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always
management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true
management.metrics.tags.application=${spring.application.name}

# Custom metrics configuration
management.metrics.enable.jvm=true
management.metrics.enable.process=true
management.metrics.enable.system=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true
